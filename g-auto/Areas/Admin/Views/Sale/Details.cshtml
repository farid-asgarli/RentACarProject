
@{
    ViewBag.Title = "Details";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

@model g_auto.Models.Sale

@if (Model != null)
{
    <div class="intro-y flex flex-col sm:flex-row items-center mt-8">
        <h2 class="text-lg font-medium mr-auto">
            Order № GA@(Model.Id)
        </h2>
        @*<div class="w-full sm:w-auto flex mt-4 sm:mt-0">
            <a href="javascript:;" data-toggle="modal" data-target="#new-order-modal" class="button text-white bg-theme-1 shadow-md mr-2">New Order</a>
            <div class="pos-dropdown dropdown relative ml-auto sm:ml-0">
                <button class="dropdown-toggle button px-2 box text-gray-700">
                    <span class="w-5 h-5 flex items-center justify-center"> <i class="w-4 h-4" data-feather="chevron-down"></i> </span>
                </button>
                <div class="pos-dropdown__dropdown-box dropdown-box mt-10 absolute top-0 right-0 z-20">
                    <div class="dropdown-box__content box p-2">
                        <a href="" class="flex items-center block p-2 transition duration-300 ease-in-out bg-white hover:bg-gray-200 rounded-md"> <i data-feather="activity" class="w-4 h-4 mr-2"></i> <span class="truncate">INV-0206020 - Morgan Freeman</span> </a>
                        <a href="" class="flex items-center block p-2 transition duration-300 ease-in-out bg-white hover:bg-gray-200 rounded-md"> <i data-feather="activity" class="w-4 h-4 mr-2"></i> <span class="truncate">INV-0206022 - Angelina Jolie</span> </a>
                        <a href="" class="flex items-center block p-2 transition duration-300 ease-in-out bg-white hover:bg-gray-200 rounded-md"> <i data-feather="activity" class="w-4 h-4 mr-2"></i> <span class="truncate">INV-0206021 - Hugh Jackman</span> </a>
                    </div>
                </div>
            </div>
        </div>*@
    </div>
    <div class="pos intro-y grid grid-cols-12 gap-5 ">
        <!-- BEGIN: Item List -->
        <div class="intro-y col-span-12 lg:col-span-8">

            <div class="grid grid-cols-12 gap-5 mt-5">
                <div class="col-span-12 sm:col-span-4 xxl:col-span-3 box p-5 cursor-pointer zoom-in">
                    <div class="font-medium text-base">Date Ordered</div>
                    <div class="text-gray-600">@Model.PostDate.ToString("MMM d yyyy, HH:mm:ss")</div>
                </div>
                @if (Model.User != null)
                {
                    <div class="col-span-12 sm:col-span-4 xxl:col-span-3 box bg-theme-1 p-5 cursor-pointer zoom-in">
                        <div class="font-medium text-base text-white">Ordered By</div>
                        <div class="text-theme-25">@Model.User.FullName</div>
                    </div>
                }
                <div class="col-span-12 sm:col-span-4 xxl:col-span-3 box p-5 cursor-pointer zoom-in">
                    <div class="font-medium text-base">Ordered Quantity</div>
                    <div class="text-gray-600">@Model.Amount.ToString("0") item(s)</div>
                </div>
                @if (Model.User != null)
                {
                    <div class="col-span-12 sm:col-span-4 xxl:col-span-3 box p-5 cursor-pointer zoom-in">
                        <div class="font-medium text-base">Customer's Phone Number</div>
                        <div class="text-gray-600">@Model.User.Phone</div>
                    </div>
                    <div class="col-span-12 sm:col-span-6 xxl:col-span-6 box p-5 cursor-pointer zoom-in">
                        <div class="font-medium text-base">Customer's Address</div>
                        <div class="text-gray-600">@Model.User.Address</div>
                    </div>
                    <div class="col-span-12 sm:col-span-6 xxl:col-span-6 box p-5 cursor-pointer zoom-in">
                        <div class="font-medium text-base">Customer's Email</div>
                        <div class="text-gray-600">@Model.User.Email</div>
                    </div>
                }

                @if (Model.Product != null)
                {

                    <div class="col-span-12 sm:col-span-6 xxl:col-span-6 box p-5 cursor-pointer zoom-in">
                        <div class="font-medium text-base">Product Price</div>
                        <div class="text-gray-600">$@Model.Product.Price.ToString("0.00")</div>
                    </div>
                    <div class="col-span-12 sm:col-span-6 xxl:col-span-6 box p-5 cursor-pointer zoom-in">
                        <div class="font-medium text-base">Product Added By</div>
                        <div class="text-gray-600">@Model.Product.Admin.FullName</div>
                    </div>
                }
                <div class="col-span-12 sm:col-span-12 xxl:col-span-12 box p-5 cursor-pointer zoom-in">
                    <div class="font-medium text-base">Order Note</div>
                    <div class="text-gray-600">@(Model.OrderNote!=null?Model.OrderNote:"Empty")</div>
                </div>
            </div>
            <div class="grid grid-cols-12 gap-5 mt-5 pt-5 border-t border-theme-5">
                <div class="intro-y block col-span-12 sm:col-span-4 xxl:col-span-3">
                    <div class="box rounded-md p-3 relative zoom-in">
                        @if (Model.Product != null && Model.Product.ProductImages.FirstOrDefault() != null)
                        {
                            <div class="flex-none pos-image relative block">
                                <div class="pos-image__preview image-fit">
                                    <img alt="Midone Tailwind HTML Admin Template" src="~/Uploads/@Model.Product.ProductImages.FirstOrDefault().Name">
                                </div>
                            </div>
                            <div class="block font-medium text-center truncate mt-3">@Model.Product.Name</div>
                        }

                    </div>
                </div>

                @if (Model.Product != null)
                {
                    <div class="col-span-12 sm:col-span-8 xxl:col-span-9 box p-5 cursor-pointer zoom-in">
                        <div class="font-medium text-base">Product Description</div>
                        <div class="text-gray-600">@Html.Raw((Model.Product.Desc.Length > 3000 ? Model.Product.Desc.Substring(0, 3000) + "..." : Model.Product.Desc))</div>
                    </div>

                    <div class="col-span-12 sm:col-span-12 xxl:col-span-12 box p-5 cursor-pointer zoom-in">
                        <div class="font-medium text-base">Product Review By Customer</div>
                        <div class="text-gray-600">@(Model.Product.ReviewProducts.FirstOrDefault(c => c.UserId == Model.UserId)!=null? Model.Product.ReviewProducts.FirstOrDefault(c => c.UserId == Model.UserId).Content:"Not Reviewed Yet")</div>
                    </div>
                }
            </div>
        </div>
        <!-- END: Item List -->
        <!-- BEGIN: Ticket -->
        <div class="col-span-12 lg:col-span-4 mt-5">
            <div class="intro-y pr-1">
                <div class="box p-2">
                    <div class="pos__tabs nav-tabs justify-center flex"> <a data-toggle="tab" data-target="#ticket" href="javascript:;" class="flex-1 py-2 rounded-md text-center active">Ticket</a> <a data-toggle="tab" data-target="#details" href="javascript:;" class="flex-1 py-2 rounded-md text-center">Details</a> </div>
                </div>
            </div>
            <div class="tab-content">
                <div class="tab-content__pane active" id="ticket">
                    <div class="pos__ticket box p-2 mt-5">
                        <div class="flex items-center p-3 cursor-pointer transition duration-300 ease-in-out bg-white  rounded-md order_status_container">
                            <div class="pos__ticket__item-name truncate mr-1">Status</div>


                            @if (Model.isActive)
                            {
                                <div class="ml-auto order_status text-theme-10">Active</div>
                            }
                            else if (Model.isPending)
                            {
                                <div class="ml-auto order_status text-theme-11">Pending Confirmation</div>
                            }
                            else if (Model.isCancelled)
                            {
                                <div class="ml-auto order_status text-theme-6">Cancelled</div>
                            }
                            else if (Model.isFinished)
                            {
                                <div class="ml-auto order_status text-theme-9">Finished</div>
                            }
                        </div>

                    </div>
                    <div class="pos__ticket box p-2 mt-5">
                        <div class="flex items-center p-3 cursor-pointer transition duration-300 ease-in-out bg-white  rounded-md">
                            <div class="pos__ticket__item-name truncate mr-1">@Model.Product.Name</div>
                            <div class="text-gray-600">x 1</div>

                            <div class="ml-auto">$@Model.Price.ToString("0.00")</div>
                        </div>

                    </div>

                    @if (Model.isCancelled == false)
                    {

                        <div class="box p-5 mt-5 info-container">
                            <div class="flex">
                                <div class="mr-auto">Subtotal</div>
                                <div>$@((Model.Price - Model.Price * 15 / 100).ToString("0.00"))</div>
                            </div>
                            <div class="flex">
                                <div class="mr-auto">Shipping</div>
                                <div>Free</div>
                            </div>
                            <div class="flex mt-4">
                                <div class="mr-auto">Tax</div>
                                <div class="text-theme-6">+15%</div>
                            </div>
                            <div class="flex mt-4 pt-4 border-t border-gray-200">
                                <div class="mr-auto font-medium text-base">Total</div>
                                <div class="font-medium text-base">$@Model.Price.ToString("0.00")</div>
                            </div>

                        </div>
                        if (Model.Shipments.FirstOrDefault() != null)
                        {
                            <div class="box p-5 mt-5 info-container">
                                <div class="flex">
                                    <div class="mr-auto">Shipment Created Date</div>
                                    <div>@Model.Shipments.FirstOrDefault(c => c.IsCanceled == false).CreatedDate.Value.ToString("MMM d yyyy, HH:mm")</div>
                                </div>
                                <div class="flex">
                                    <div class="mr-auto">ETA</div>
                                    <div>@Model.Shipments.FirstOrDefault(c => c.IsCanceled == false).ESTDelivery.Value.ToString("MMM d yyyy, HH:mm")</div>
                                </div>
                                <div class="flex mt-4">
                                    <div class="mr-auto">Shipment Status</div>
                                    <div>
                                        @if (Model.Shipments.FirstOrDefault(c => c.IsCanceled == false).IsDelivered)
                                        {

                                            <span>Delivered</span>
                                        }
                                        else
                                        {
                                            <span>Not Yet Delivered</span>
                                        }
                                    </div>
                                </div>
                                <div class="flex mt-4 pt-4 border-t border-gray-200">
                                    <div class="mr-auto font-medium text-base">Tracking ID</div>
                                    <div class="font-medium text-base">#MID@(Model.Shipments.FirstOrDefault(c => c.IsCanceled == false).Id)</div>
                                </div>

                            </div>
                        }
                        if (Model.isFinished == false)
                        {
                            <div class="flex mt-5 double-button-container">
                                @if (Model.Shipments.FirstOrDefault() == null || Model.Shipments.FirstOrDefault(c => c.IsCanceled) != null)
                                {
                                    <button class="button w-32 bg-theme-6 text-white shadow-md" id="cancel_order" data-orderid="@Model.Id">Cancel Order</button>
                                }
                                @if (Model.isPending)
                                {
                                    <button class="button w-40 text-white bg-theme-1 shadow-md ml-auto" id="confirm_order" data-orderid="@Model.Id">Charge</button>
                                }
                                else if (Model.isActive)
                                {
                                    if (Model.Shipments.FirstOrDefault() == null || Model.Shipments.FirstOrDefault(c => c.IsCanceled) != null)
                                    {
                                        <button class="button w-40 bg-gray-200 text-gray-600 shadow-md ml-auto" id="ship_order" data-orderid="@Model.Id">Create Shipment</button>
                                    }

                                }

                            </div>
                        }
                    }
                    else
                    {
                        <div class="box p-5 mt-5">
                            <div class="flex mt-4  ">
                                <div class="m-auto font-medium text-base text-theme-6">Order was cancelled by @(Model.Admin!=null? Model.Admin.FullName:"Unknown.") on @Model.CancelledDate.Value.ToString("MMM d yyyy, HH:mm:ss")</div>

                            </div>
                        </div>
                    }
                </div>
                @{

                    decimal TotalRating = 0;

                    if (Model.Product!=null && Model.Product.ReviewProducts.Count() != 0)
                    {
                        int Rating = 0;

                        foreach (g_auto.Models.ReviewProduct r in Model.Product.ReviewProducts)
                        {
                            Rating += r.Rating;

                        }

                        TotalRating = Rating / Model.Product.ReviewProducts.Count();
                    }
                }
                <div class="tab-content__pane" id="details">
                    <div class="box p-5 mt-5">
                        <div class="flex items-center border-b pb-5">
                            <div class="">
                                <div class="text-gray-600">Payment Type</div>
                                <div>Direct Bank Transfer</div>
                            </div>
                            <i data-feather="credit-card" class="w-4 h-4 text-gray-600 ml-auto"></i>
                        </div>
                        <div class="flex items-center border-b py-5">
                            <div class="">
                                <div class="text-gray-600">Product's Rating</div>
                                @if (Model.Product!=null && Model.Product.ReviewProducts.Count() != 0)
                                {
                                    <div>@TotalRating.ToString("0.0") out of 5</div>
                                }
                                else
                                {
                                    <div>Not Rated Yet</div>
                                }
                            </div>
                            <i data-feather="star" class="w-4 h-4 text-gray-600 ml-auto"></i>
                        </div>
                        <div class="flex items-center border-b py-5">
                            <div class="">
                                <div class="text-gray-600">Total number of orders by customer (product specific)</div>
                                @if (Model.User != null)
                                {
                                    <div>@Model.User.Sales.Where(c => c.ProductId == Model.ProductId).Count()</div>
                                }
                            </div>
                            <i data-feather="users" class="w-4 h-4 text-gray-600 ml-auto"></i>
                        </div>
                        <div class="flex items-center pt-5">
                            <div class="">
                                <div class="text-gray-600">Total number of orders for this product</div>
                                @if (Model.Product != null)
                                {
                                    <div>@Model.Product.Sales.Count()</div>
                                }
                            </div>
                            <i data-feather="archive" class="w-4 h-4 text-gray-600 ml-auto"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- END: Ticket -->
    </div>
    <!-- BEGIN: New Order Modal -->
    <div class="modal" id="new-order-modal">
        <div class="modal__content">
            <div class="flex items-center px-5 py-5 sm:py-3 border-b border-gray-200">
                <h2 class="font-medium text-base mr-auto">
                    New Order
                </h2>
            </div>
            <div class="p-5 grid grid-cols-12 gap-4 row-gap-3">
                <div class="col-span-12">
                    <label>Name</label>
                    <input type="text" class="input w-full border mt-2 flex-1" placeholder="Customer name">
                </div>
                <div class="col-span-12">
                    <label>Table</label>
                    <input type="text" class="input w-full border mt-2 flex-1" placeholder="Customer table">
                </div>
                <div class="col-span-12">
                    <label>Number of People</label>
                    <input type="text" class="input w-full border mt-2 flex-1" placeholder="People">
                </div>
            </div>
            <div class="px-5 py-3 text-right border-t border-gray-200">
                <button type="button" data-dismiss="modal" class="button w-32 border text-gray-700 mr-1">Cancel</button>
                <button type="button" class="button w-32 bg-theme-1 text-white">Create Ticket</button>
            </div>
        </div>
    </div>
    <!-- END: New Order Modal -->
    <!-- BEGIN: Add Item Modal -->
    <div class="modal" id="add-item-modal">
        <div class="modal__content">
            <div class="flex items-center px-5 py-5 sm:py-3 border-b border-gray-200">
                <h2 class="font-medium text-base mr-auto">
                    Hotdog
                </h2>
            </div>
            <div class="p-5 grid grid-cols-12 gap-4 row-gap-3">
                <div class="col-span-12">
                    <label>Quantity</label>
                    <div class="flex mt-2 flex-1">
                        <button type="button" class="button w-12 border bg-gray-200 text-gray-600 mr-1">-</button>
                        <input type="text" class="input w-full border text-center" placeholder="Item quantity" value="2">
                        <button type="button" class="button w-12 border bg-gray-200 text-gray-600 ml-1">+</button>
                    </div>
                </div>
                <div class="col-span-12">
                    <label>Notes</label>
                    <textarea class="input w-full border mt-2 flex-1" placeholder="Item notes"></textarea>
                </div>
            </div>
            <div class="px-5 py-3 text-right border-t border-gray-200">
                <button type="button" data-dismiss="modal" class="button w-24 border text-gray-700 mr-1">Cancel</button>
                <button type="button" class="button w-24 bg-theme-1 text-white">Add Item</button>
            </div>
        </div>
    </div>
    <div class="modal" id="delete-confirmation-modal">
        <div class="modal__content">
            <div class="p-5 text-center">
                <i data-feather="x-circle" class="w-16 h-16 text-theme-6 mx-auto mt-3"></i>
                <div class="text-3xl mt-5">Are you sure?</div>
                <div class="text-gray-600 mt-2">Are you sure you want to cancel the order? This process cannot be undone.</div>
            </div>
            <div class="px-5 pb-8 text-center">
                <button type="button" data-dismiss="modal" class="button w-24 border text-gray-700 mr-1">Dismiss</button>
                <button type="button" id="btn-cancel-order" data-id="" class="button w-40 bg-theme-6 text-white">Cancel The Order</button>
            </div>
        </div>
    </div>

    <div class="modal" id="charge-confirmation-modal">
        <div class="modal__content">
            <div class="p-5 text-center">
                <i data-feather="help-circle" class="w-16 h-16 text-theme-10 mx-auto mt-3"></i>
                <div class="text-3xl mt-5">Are you sure?</div>
                <div class="text-gray-600 mt-2">Are you sure you want to confirm the order?</div>
            </div>
            <div class="px-5 pb-8 text-center">
                <button type="button" data-dismiss="modal" class="button w-24 border text-gray-700 mr-1">Dismiss</button>
                <button type="button" id="btn-charge-order" data-id="" class="button w-40 bg-theme-10 text-white">Charge and Activate</button>
            </div>
        </div>
    </div>


    <div class="modal" id="shipping-confirmation-modal">
        <div class="modal__content">
            <div class="p-5 text-center">
                <i data-feather="help-circle" class="w-16 h-16 text-theme-10 mx-auto mt-3"></i>
                <div class="text-3xl mt-5">Are you sure?</div>
                <div class="text-gray-600 mt-2">Are you sure you want to create shipment?</div>
            </div>
            <div class="px-5 pb-8 text-center">
                <button type="button" data-dismiss="modal" class="button w-24 border text-gray-700 mr-1">Dismiss</button>
                <button type="button" id="btn-ship-order" data-id="" class="button w-40 bg-theme-10 text-white">Create Shipment</button>
            </div>
        </div>
    </div>
}